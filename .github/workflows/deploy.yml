name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
      IMAGE_TAG: myjavaapp-${{ github.run_number }}-${{ github.sha }}
      ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

    steps:
    # 1. Checkout Code
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # 3. Build Docker Image (âœ… before AWS login)
    - name: Build Docker Image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .

    # 4. Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # 5. Login to Amazon ECR
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        region: ${{ secrets.AWS_REGION }}

    # 6. Tag Docker Image for ECR
    - name: Tag Docker image
      run: |
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # 7. Push Docker Image to ECR
    - name: Push Docker Image to ECR
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # 8. Download current ECS Task Definition
    - name: Get current task definition
      run: |
        aws ecs describe-task-definition \
          --task-definition ${{ secrets.TASK_DEFINITION_NAME }} \
          --region $AWS_REGION \
          --query "taskDefinition" > task-definition.json

    # 9. Update task definition with new image
    - name: Update image in task definition
      run: |
        jq --arg IMAGE "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" \
        '.containerDefinitions[0].image = $IMAGE |
         {family: .family, executionRoleArn, taskRoleArn, networkMode, containerDefinitions, requiresCompatibilities, cpu, memory}' \
        task-definition.json > new-task-def.json

    # 10. Register new task definition
    - name: Register new ECS task definition
      run: |
        aws ecs register-task-definition \
          --region $AWS_REGION \
          --cli-input-json file://new-task-def.json

    # 11. Update ECS service with new task definition revision
    - name: Update ECS service
      run: |
        NEW_REVISION=$(aws ecs describe-task-definition \
          --task-definition ${{ secrets.TASK_DEFINITION_NAME }} \
          --region $AWS_REGION \
          --query "taskDefinition.revision" --output text)

        aws ecs update-service \
          --cluster ${{ secrets.ECS_CLUSTER }} \
          --service ${{ secrets.ECS_SERVICE }} \
          --task-definition ${{ secrets.TASK_DEFINITION_NAME }}:$NEW_REVISION \
          --region $AWS_REGION
